<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        
        <!-- We use custom packing rules below -->
        <IncludeBuildOutput>false</IncludeBuildOutput>
        
        <!-- Do not trigger warning about missing dlls in the resulting nuget package -->
        <NoPackageAnalysis>true</NoPackageAnalysis>
        
        
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <PackageId>Silhan.ObjectInitializerAnalyzer</PackageId>
        <PackageVersion>1.0.0.0</PackageVersion>
        <Authors>Jindrich Silhan</Authors>
        <License>https://github.com/silhanji/ObjectInitializerAnalyzer/blob/master/LICENSE.md</License>
        <PackageProjectUrl>https://github.com/silhanji/ObjectInitializerAnalyzer</PackageProjectUrl>
        <RepositoryUrl>https://github.com/silhanji/ObjectInitializerAnalyzer</RepositoryUrl>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <Description>Analyzer which suggests setting all public properties in object initializer</Description>
        <PackageReleaseNotes>Initial release</PackageReleaseNotes>
        <Copyright>Jindrich Silhan 2022</Copyright>
        <PackageTags>analyzers</PackageTags>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.0.0" PrivateAssets="all" />
        <PackageReference Update="NETStandard.Library" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
    
</Project>
